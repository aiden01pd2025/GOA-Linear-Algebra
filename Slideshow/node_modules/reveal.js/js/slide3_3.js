// Wait for reveal.js to be ready
Reveal.addEventListener('ready', function() {
  const canvas = document.getElementById('lerp-canvas');
  const ctx = canvas.getContext('2d');
  const tSlider = document.getElementById('t-slider');
  const tValue = document.getElementById('t-value');
  
  // Points
  const pointA = { x: 100, y: 200, color: 'red' };
  const pointB = { x: 500, y: 200, color: 'blue' };
  
  // Function to lerp between two values
  function lerp(a, b, t) {
    return a + (b - a) * t;
  }
  
  // Function to draw everything
  function draw(t) {
    // Clear canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    
    // Draw line between A and B
    ctx.beginPath();
    ctx.moveTo(pointA.x, pointA.y);
    ctx.lineTo(pointB.x, pointB.y);
    ctx.strokeStyle = '#ddd';
    ctx.lineWidth = 2;
    ctx.stroke();
    
    // Calculate interpolated point
    const lerpX = lerp(pointA.x, pointB.x, t);
    const lerpY = lerp(pointA.y, pointB.y, t);
    
    // Draw point A
    ctx.beginPath();
    ctx.arc(pointA.x, pointA.y, 8, 0, Math.PI * 2);
    ctx.fillStyle = pointA.color;
    ctx.fill();
    ctx.fillStyle = 'black';
    ctx.fillText('A', pointA.x - 15, pointA.y - 15);
    
    // Draw point B
    ctx.beginPath();
    ctx.arc(pointB.x, pointB.y, 8, 0, Math.PI * 2);
    ctx.fillStyle = pointB.color;
    ctx.fill();
    ctx.fillStyle = 'black';
    ctx.fillText('B', pointB.x + 15, pointB.y - 15);
    
    // Draw interpolated point
    ctx.beginPath();
    ctx.arc(lerpX, lerpY, 8, 0, Math.PI * 2);
    ctx.fillStyle = 'purple';
    ctx.fill();
    
    // Draw t value near the point
    ctx.fillStyle = 'black';
    ctx.fillText(`t = ${t.toFixed(2)}`, lerpX - 20, lerpY - 20);
    
    // Draw equation
    ctx.font = '16px Arial';
    ctx.fillText(`Lerp(A, B, t) = A + (B - A) * t`, 150, 350);
  }
  
  // Update when slider changes
  tSlider.addEventListener('input', function() {
    const t = parseFloat(this.value);
    tValue.textContent = t.toFixed(2);
    draw(t);
  });
  
  // Initial draw
  draw(parseFloat(tSlider.value));
});